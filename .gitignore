# RadioForms - ICS Forms Management Application
# Tauri + React + TypeScript + SQLite Project .gitignore

# ==========================================
# NODE.JS / NPM
# ==========================================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# ==========================================
# RUST / CARGO
# ==========================================

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# ==========================================
# TAURI SPECIFIC
# ==========================================

# Tauri build artifacts
src-tauri/target/
src-tauri/gen/

# Tauri configuration files (keep .example versions)
src-tauri/tauri.conf.json.bak

# WiX build artifacts (Windows installer)
src-tauri/WixTools/

# ==========================================
# VITE / BUILD TOOLS
# ==========================================

# Vite build output
dist/
dist-ssr/

# Vite temporary files
.vite/

# Build directories
build/
out/

# ==========================================
# TYPESCRIPT
# ==========================================

# TypeScript incremental compilation cache
*.tsbuildinfo

# TypeScript declaration maps
*.d.ts.map

# ==========================================
# REACT / FRONTEND
# ==========================================

# React build output
build/

# Storybook
.out/
.storybook-out/

# ==========================================
# DATABASE FILES
# ==========================================

# SQLite database files (for development - exclude test databases)
*.db
*.db-journal
*.db-shm
*.db-wal
*.sqlite
*.sqlite3

# Database backups (development)
*.db.bak
*.sqlite.bak

# Keep example/template database files
!**/templates/*.db
!**/examples/*.db
!**/fixtures/*.db

# ==========================================
# TESTING
# ==========================================

# Test coverage
coverage/
.nyc_output/
*.lcov

# Jest
.jest/

# Playwright
test-results/
playwright-report/
playwright/.cache/

# ==========================================
# EDITORS & IDEs
# ==========================================

# Visual Studio Code
.vscode/
!.vscode/settings.json.example
!.vscode/launch.json.example
!.vscode/extensions.json.example

# IntelliJ IDEA
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# ==========================================
# OPERATING SYSTEMS
# ==========================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==========================================
# LOGS
# ==========================================

# General log files
*.log
logs/
*.log.*

# Application-specific logs
radioforms.log
radioforms-*.log
application.log
error.log
debug.log

# Tauri logs
tauri.log

# ==========================================
# SECURITY & KEYS
# ==========================================

# API keys and secrets
.env
.env.local
.env.development
.env.production
.env.test
*.key
*.pem
*.p12
*.pfx

# Certificate files
*.crt
*.cer
*.der

# ==========================================
# DEPLOYMENT & DISTRIBUTION
# ==========================================

# Release builds
release/
releases/
artifacts/

# Installer files
*.msi
*.exe
*.dmg
*.pkg
*.deb
*.rpm
*.tar.gz
*.zip

# Tauri bundles
src-tauri/target/release/bundle/
src-tauri/target/debug/bundle/

# Standalone deployment packages
dist/standalone/
build/standalone/

# ==========================================
# DEVELOPMENT TOOLS
# ==========================================

# Profiling and benchmarking
*.prof
*.bench
perf.data*

# Memory dumps
*.hprof
*.heap

# Cache directories
.cache/
.temp/
.tmp/

# Lock files (keep package-lock.json but ignore others)
yarn.lock
pnpm-lock.yaml

# ==========================================
# DOCUMENTATION BUILDS
# ==========================================

# Generated documentation
docs/build/
docs/dist/
.docusaurus/

# API documentation
api-docs/

# ==========================================
# CUSTOM PROJECT FILES
# ==========================================

# Development configuration overrides
config.local.json
settings.local.json

# Test data files (exclude from repository)
test-data/
fixtures/large-datasets/

# Screenshots and media for development
screenshots/dev/
recordings/dev/

# Personal notes and TODO files
notes.md
todo.txt
*.personal.*

# Backup files
*.bak
*.backup
*.old

# ==========================================
# MISCELLANEOUS
# ==========================================

# Temporary files
*.tmp
*.temp
*~

# Archive files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# System files
.DS_Store
Thumbs.db

# ==========================================
# KEEP THESE FILES (NEGATIONS)
# ==========================================

# Keep essential configuration files
!.gitignore
!.gitattributes
!.nvmrc
!.node-version

# Keep example and template files
!**/*.example
!**/*.template
!**/templates/
!**/examples/

# Keep important documentation
!README.md
!LICENSE
!CHANGELOG.md
!CONTRIBUTING.md

# Keep VS Code example configurations
!.vscode/settings.json.example
!.vscode/launch.json.example
!.vscode/extensions.json.example

# Keep essential project files
!package.json
!tsconfig.json
!tailwind.config.js
!vite.config.ts
!src-tauri/Cargo.toml
!src-tauri/tauri.conf.json

# ==========================================
# PROJECT-SPECIFIC EXCLUSIONS
# ==========================================

# Exclude large ICS form analysis files during development
# (uncomment if form analysis files become too large)
# docs/forms/analysis-cache/

# Exclude performance test data
performance-tests/large-datasets/

# Exclude user-specific form templates during development
user-templates/
custom-forms/

# ==========================================
# CONTINUOUS INTEGRATION
# ==========================================

# CI/CD artifacts
.github/artifacts/
.ci/
ci-build/

# Test reports
test-reports/
junit.xml
coverage.xml

# ==========================================
# END OF .gitignore
# ==========================================

# Note: This .gitignore is designed for the RadioForms project
# which uses Tauri + React + TypeScript + SQLite.
# 
# Key considerations:
# - Excludes all build artifacts and dependencies
# - Protects sensitive data (database files, keys, logs)
# - Maintains essential project configuration files
# - Supports cross-platform development (Windows, macOS, Linux)
# - Optimized for standalone application development

# Added by Claude Task Master
# Logs
logs
dev-debug.log
# Environment variables
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific
# Task files
tasks.json
tasks/ 